# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: 0 18 * * 6
  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: init 
        run: |
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
          libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
          libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 \
          python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
          uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo chmod 777 /mnt
          cd / && ls -l
      - name: git clone lede
        run: |
          cd /mnt
          git clone https://github.com/coolsnowwolf/lede.git x86
      - name: add feeds.config.default
        run: |
          cd /mnt/x86
          sed -i '$a src-git istore https://github.com/linkease/istore;main' feeds.conf.default
          sed -i '$a src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main' feeds.conf.default
          sed -i '$a src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2.git;main' feeds.conf.default
          sed -i '$a src-git helloworld https://github.com/fw876/helloworld.git' feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: mid ip dns gatawey
        run: |
          cd /mnt/x86
          sed -i 's/192.168.1.1/192.168.1.181/g' package/base-files/files/bin/config_generate
          sed -i "/set network.\$1.proto='static'/{s/$/\n\t\t\t\tset network.\$1.gateway='192.168.1.1'/}" package/base-files/files/bin/config_generate
          sed -i "/set network.\$1.proto='static'/{s/$/\n\t\t\t\tset network.\$1.dns='223.5.5.5 192.168.1.1'/}" package/base-files/files/bin/config_generate
          sed -i '/uci commit system/i\uci set system.@system[0].hostname='cym-router'' package/lean/default-settings/files/zzz-default-settings
          sed -i "s/OpenWrt /Cymrouter build $(TZ=UTC-8 date "+%Y.%m.%d") @ OpenWrt /g" package/lean/default-settings/files/zzz-default-settings
      - name: creat .config 
        run: |
          cp x86.conf /mnt/
          cd /mnt/x86
          cp ../x86.conf .config
          make defconfig
      - name: start make 
        run: |
          cd /mnt/x86
          make download -j$(nproc)
          make V=s -j$(nproc)
      - name: mv /mnt/x86/bin/targets/x86/64/*.img.gz
        run: |
          ls -l /mnt/x86/bin/targets/x86/64/
          mkdir file
          mv /mnt/x86/bin/targets/x86/64/*.img.gz file/
          echo "###--------------------------------------------###"
          ls -lh
          cd file && ls -lh
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CYM_TOKEN }}
          tag: ${{env.strDate}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} 自动发布
          file: file/*
